load("@rules_cc//cc:defs.bzl", "cc_library")
load("//third_party/qt:build_defs.bzl", "qt_moc", "qt_rcc", "qt_test")

qt_rcc(
    name = "test_data",
    testonly = True,
    srcs = ["resources/test_data.qrc"],
    data = glob(["resources/**/*.png"]),
    tags = ["qt"],
)

COPTS = ["-Iqtox"] + select({
    "//tools/config:freebsd": [],
    "//tools/config:linux": ["-fPIC"],
    "//tools/config:osx": [],
    "//tools/config:windows": [],
})

qt_moc(
    name = "mock_moc",
    testonly = True,
    srcs = ["mock/include/mock/mockcoresettings.h"],
    mocopts = [
        "-Iqtox",
        "-Iqtox/util/include",
    ],
    tags = ["qt"],
    deps = [
        "//qtox/src",
        "//qtox/util",
    ],
)

cc_library(
    name = "dbutility",
    testonly = True,
    srcs = ["dbutility/src/dbutility.cpp"],
    hdrs = ["dbutility/include/dbutility/dbutility.h"],
    copts = COPTS,
    strip_include_prefix = "dbutility/include",
    tags = ["qt"],
    deps = [
        "//qtox/src",
        "@qt//:qt_core",
        "@qt//:qt_test",
    ],
)

cc_library(
    name = "mock",
    testonly = True,
    srcs = [
        ":mock_moc",
        ":test_data",
    ] + glob(["mock/src/*.cpp"]),
    hdrs = glob(["mock/include/mock/*.h"]),
    copts = COPTS,
    includes = ["mock/include"],
    tags = ["qt"],
    deps = [
        "//qtox/src",
        "@qt//:qt_core",
    ],
)

[qt_test(
    name = src[src.rindex("/") + 1:-4],
    size = "small",
    src = src,
    copts = COPTS,
    mocopts = ["-Iqtox"],
    deps = [
        ":dbutility",
        ":mock",
        "//c-toxcore",
        "//qtox:res_lib",
        "//qtox/src",
        "//qtox/util",
        "@qt//:qt_core",
        "@qt//:qt_gui",
        "@qt//:qt_network",
    ],
) for src in glob(
    ["**/*_test.cpp"],
    exclude = ["persistence/dbschema_test.cpp"],
)]
