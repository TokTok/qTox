load("@rules_cc//cc:defs.bzl", "cc_library")
load("//third_party/qt:build_defs.bzl", "qt_moc", "qt_test")

package(features = ["layering_check"])

qt_moc(
    name = "mock_moc",
    srcs = ["mock/include/mock/mockcoresettings.h"],
    mocopts = [
        "-Iqtox",
        "-Iqtox/util/include",
    ],
    deps = [
        "//qtox/src",
        "//qtox/util",
    ],
)

cc_library(
    name = "mock",
    srcs = [":mock_moc"] + glob(["mock/src/*.cpp"]),
    hdrs = glob(["mock/include/mock/*.h"]),
    copts = ["-Iqtox"] + select({
        "//tools/config:freebsd": [],
        "//tools/config:linux": ["-fPIC"],
        "//tools/config:osx": [],
        "//tools/config:windows": [],
    }),
    includes = ["mock/include"],
    deps = ["//qtox/src"],
)

[qt_test(
    name = src[src.rindex("/") + 1:-4],
    size = "small",
    src = src,
    copts = ["-Iqtox"] + select({
        "//tools/config:freebsd": [],
        "//tools/config:linux": ["-fPIC"],
        "//tools/config:osx": [],
        "//tools/config:windows": [],
    }),
    mocopts = ["-Iqtox"],
    deps = [
        ":mock",
        "//c-toxcore",
        "//qtox:res_lib",
        "//qtox/src",
        "//qtox/util",
    ],
) for src in glob(
    ["*/*_test.cpp"],
    exclude = ["persistence/dbschema_test.cpp"],
)]
